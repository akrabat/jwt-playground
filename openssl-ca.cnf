####################################################################
[ ca ]
default_ca    = CA_default      # The default ca section

[ CA_default ]

default_days     = 365          # How long to certify for
default_crl_days = 30           # How long before next CRL
default_md       = sha256       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert

####################################################################
[ req ]
default_bits       = 4096
default_keyfile    = cakey.pem
distinguished_name = ca_distinguished_name
x509_extensions    = ca_extensions
string_mask        = utf8only

####################################################################
[ ca_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default = GB

stateOrProvinceName         = State or Province Name (full name)
stateOrProvinceName_default = England

localityName                = Locality Name (eg, city)
localityName_default        = Worcester

organizationName            = Organization Name (eg, company)
organizationName_default    = Example Company

#organizationalUnitName_default = Server Research Department
#organizationalUnitName         = Organizational Unit (eg, division)

#commonName         = Common Name (e.g. server FQDN or YOUR name)
#commonName_default = Test CA

emailAddress         = Email Address
emailAddress_default = test@example.com

####################################################################
[ ca_extensions ]

subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:true
keyUsage               = keyCertSign, cRLSign

####################################################################
[ ca_cert ]
# Extensions for a typical intermediate CA (\`man x509v3_config\`).
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
basicConstraints        = critical, CA:true
keyUsage                = critical, digitalSignature, cRLSign, keyCertSign

####################################################################
[ server_cert ]
# Extensions for server certificates (\`man x509v3_config\`).
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer:always
basicConstraints        = CA:FALSE
keyUsage                = critical, digitalSignature, keyEncipherment
nsCertType              = server
nsComment               = "OpenSSL Generated Server Certificate"


# [ req ]
# distinguished_name      = req_distinguished_name
# default_md              = sha256
#
# [ req_distinguished_name ]
# countryName_default             = GB
# stateOrProvinceName_default     = England
# 0.organizationName_default      = Example Company
#
# [ ca_cert ]
# # Extensions for a typical intermediate CA (\`man x509v3_config\`).
# subjectKeyIdentifier    = hash
# authorityKeyIdentifier  = keyid:always,issuer
# basicConstraints        = critical, CA:true
# keyUsage                = critical, digitalSignature, cRLSign, keyCertSign
#
# [ server_cert ]
# # Extensions for server certificates (\`man x509v3_config\`).
# subjectKeyIdentifier    = hash
# authorityKeyIdentifier  = keyid,issuer:always
# basicConstraints        = CA:FALSE
# keyUsage                = critical, digitalSignature, keyEncipherment
# nsCertType              = server
# nsComment               = "OpenSSL Generated Server Certificate"
